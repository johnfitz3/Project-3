{"ast":null,"code":"var _jsxFileName = \"/Users/brysonrusomaroff/Documents/gitHub/project-3/client/src/components/AddTodoForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Select from 'react-select';\nimport Datetime from 'react-datetime';\nimport { debounce } from 'lodash';\nimport '../styles/AddTodoForm.css';\nimport 'react-datetime/css/react-datetime.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddTodoForm = _ref => {\n  _s();\n  let {\n    onAddTodo\n  } = _ref;\n  const [selectedOption, setSelectedOption] = useState(null);\n  const [inputValue, setInputValue] = useState('');\n  const [suggestions, setSuggestions] = useState([]);\n  const [selectedDate, setSelectedDate] = useState('');\n  const [timeValue, setTimeValue] = useState('');\n  const suggestionOptions = ['Buy groceries', 'Go for a run', 'Read a book', 'Learn React', 'Clean the house'];\n  const handleInputChange = newValue => {\n    setInputValue(newValue);\n  };\n  const handleInputChangeDebounced = debounce(handleInputChange, 300);\n  const handleInputChangeAsync = newValue => {\n    handleInputChangeDebounced(newValue);\n    setSuggestions(suggestionOptions.filter(option => option.toLowerCase().includes(newValue.toLowerCase())));\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (!selectedOption || selectedOption.value.trim() === '') return;\n    const newTodo = {\n      id: Date.now(),\n      title: selectedOption.value,\n      completed: false,\n      date: selectedDate ? `${selectedDate} ${timeValue}` : ''\n    };\n    onAddTodo(newTodo);\n    setSelectedOption(null);\n    setInputValue('');\n    setSelectedDate('');\n    setTimeValue('');\n  };\n  const handleSelectChange = selected => {\n    if (selected) {\n      setSelectedOption(selected);\n      setInputValue(selected.value);\n    } else {\n      setSelectedOption(null);\n      setInputValue('');\n    }\n  };\n  const handleDateChange = momentObj => {\n    setSelectedDate(momentObj.format('MM-DD-YYYY'));\n  };\n  const handleTimeChange = momentObj => {\n    setTimeValue(momentObj.format('hh:mm:ss A'));\n  };\n  const handleClearDate = () => {\n    setSelectedDate('');\n    setTimeValue('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"add-todo-form\",\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(Select, {\n      isClearable: true,\n      isSearchable: true,\n      placeholder: \"Enter a new todo...\",\n      inputValue: inputValue,\n      onInputChange: handleInputChangeAsync,\n      onChange: handleSelectChange,\n      options: suggestions.map(suggestion => ({\n        value: suggestion,\n        label: suggestion\n      })),\n      styles: {\n        control: provided => ({\n          ...provided,\n          width: '300px' // Set the desired width for the search bar\n        })\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Datetime, {\n      inputProps: {\n        placeholder: 'Select date'\n      },\n      value: selectedDate,\n      dateFormat: \"MM-DD-YYYY\",\n      onChange: handleDateChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Datetime, {\n      inputProps: {\n        placeholder: 'Select time'\n      },\n      value: timeValue,\n      dateFormat: false,\n      timeFormat: \"hh:mm A\",\n      onChange: handleTimeChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), selectedDate && timeValue && /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: handleClearDate,\n      children: \"Clear Date/Time\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n_s(AddTodoForm, \"pPHGXznclfBGqtmcakmOYYPcqNM=\");\n_c = AddTodoForm;\nexport default AddTodoForm;\nvar _c;\n$RefreshReg$(_c, \"AddTodoForm\");","map":{"version":3,"names":["React","useState","Select","Datetime","debounce","jsxDEV","_jsxDEV","AddTodoForm","_ref","_s","onAddTodo","selectedOption","setSelectedOption","inputValue","setInputValue","suggestions","setSuggestions","selectedDate","setSelectedDate","timeValue","setTimeValue","suggestionOptions","handleInputChange","newValue","handleInputChangeDebounced","handleInputChangeAsync","filter","option","toLowerCase","includes","handleSubmit","e","preventDefault","value","trim","newTodo","id","Date","now","title","completed","date","handleSelectChange","selected","handleDateChange","momentObj","format","handleTimeChange","handleClearDate","className","onSubmit","children","isClearable","isSearchable","placeholder","onInputChange","onChange","options","map","suggestion","label","styles","control","provided","width","fileName","_jsxFileName","lineNumber","columnNumber","inputProps","dateFormat","timeFormat","type","onClick","_c","$RefreshReg$"],"sources":["/Users/brysonrusomaroff/Documents/gitHub/project-3/client/src/components/AddTodoForm.js"],"sourcesContent":["import React, { useState } from 'react';\nimport Select from 'react-select';\nimport Datetime from 'react-datetime';\nimport { debounce } from 'lodash';\nimport '../styles/AddTodoForm.css';\nimport 'react-datetime/css/react-datetime.css';\n\nconst AddTodoForm = ({ onAddTodo }) => {\n  const [selectedOption, setSelectedOption] = useState(null);\n  const [inputValue, setInputValue] = useState('');\n  const [suggestions, setSuggestions] = useState([]);\n  const [selectedDate, setSelectedDate] = useState('');\n  const [timeValue, setTimeValue] = useState('');\n  const suggestionOptions = [\n    'Buy groceries',\n    'Go for a run',\n    'Read a book',\n    'Learn React',\n    'Clean the house',\n  ];\n\n  const handleInputChange = (newValue) => {\n    setInputValue(newValue);\n  };\n\n  const handleInputChangeDebounced = debounce(handleInputChange, 300);\n  const handleInputChangeAsync = (newValue) => {\n    handleInputChangeDebounced(newValue);\n    setSuggestions(\n      suggestionOptions.filter((option) =>\n        option.toLowerCase().includes(newValue.toLowerCase())\n      )\n    );\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (!selectedOption || selectedOption.value.trim() === '') return;\n    const newTodo = {\n      id: Date.now(),\n      title: selectedOption.value,\n      completed: false,\n      date: selectedDate ? `${selectedDate} ${timeValue}` : '',\n    };\n    onAddTodo(newTodo);\n    setSelectedOption(null);\n    setInputValue('');\n    setSelectedDate('');\n    setTimeValue('');\n  };\n\n  const handleSelectChange = (selected) => {\n    if (selected) {\n      setSelectedOption(selected);\n      setInputValue(selected.value);\n    } else {\n      setSelectedOption(null);\n      setInputValue('');\n    }\n  };\n\n  const handleDateChange = (momentObj) => {\n    setSelectedDate(momentObj.format('MM-DD-YYYY'));\n  };\n  const handleTimeChange = (momentObj) => {\n    setTimeValue(momentObj.format('hh:mm:ss A'));\n  };\n  const handleClearDate = () => {\n    setSelectedDate('');\n    setTimeValue('');\n  };\n  \n  return (\n    <form className=\"add-todo-form\" onSubmit={handleSubmit}>\n      <Select\n        isClearable\n        isSearchable\n        placeholder=\"Enter a new todo...\"\n        inputValue={inputValue}\n        onInputChange={handleInputChangeAsync}\n        onChange={handleSelectChange}\n        options={suggestions.map((suggestion) => ({\n          value: suggestion,\n          label: suggestion,\n        }))}\n        styles={{\n          control: (provided) => ({\n            ...provided,\n            width: '300px', // Set the desired width for the search bar\n          }),\n        }}\n      />\n      <Datetime\n        inputProps={{ placeholder: 'Select date' }}\n        value={selectedDate}\n        dateFormat=\"MM-DD-YYYY\"\n        onChange={handleDateChange}\n      />\n      <Datetime\n        inputProps={{ placeholder: 'Select time' }}\n        value={timeValue}\n        dateFormat={false}\n        timeFormat=\"hh:mm A\"\n        onChange={handleTimeChange}\n      />\n      {selectedDate && timeValue && (\n        <button type=\"button\" onClick={handleClearDate}>\n          Clear Date/Time\n        </button>\n      )}\n      <button type=\"submit\">Add</button>\n    </form>\n  );\n};\n\nexport default AddTodoForm;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}