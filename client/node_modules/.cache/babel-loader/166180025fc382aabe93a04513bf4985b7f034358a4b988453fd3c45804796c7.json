{"ast":null,"code":"var _jsxFileName = \"/Users/brysonrusomaroff/Documents/gitHub/project-3/client/src/components/SignUp.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport '../styles/Login.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SignUp = () => {\n  _s();\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const handleSubmit = event => {\n    event.preventDefault();\n    // Perform sign-up logic here\n    // You can make an API call to your server or handle the sign-up process locally\n    // Reset the form fields after sign-up\n    setName('');\n    setEmail('');\n    setPassword('');\n    // Optionally, you can navigate to the login page here\n    // You can replace \"/login\" with the actual login route in your application\n    // Make sure it matches the \"path\" attribute defined in AppRouter.js\n    window.location.href = '/login';\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"join-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"join-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"join-heading\",\n        children: \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Name\",\n          value: name,\n          onChange: event => setName(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          placeholder: \"Email\",\n          value: email,\n          onChange: event => setEmail(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"Password\",\n          value: password,\n          onChange: event => setPassword(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Sign Up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Already have an account? \", /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/login\",\n          children: \"Log in\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 36\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_s(SignUp, \"y7AVIb+2dT29WONRxO7d74XBSmc=\");\n_c = SignUp;\nexport default SignUp;\nvar _c;\n$RefreshReg$(_c, \"SignUp\");","map":{"version":3,"names":["React","useState","Link","jsxDEV","_jsxDEV","SignUp","_s","name","setName","email","setEmail","password","setPassword","handleSubmit","event","preventDefault","window","location","href","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","to","_c","$RefreshReg$"],"sources":["/Users/brysonrusomaroff/Documents/gitHub/project-3/client/src/components/SignUp.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport '../styles/Login.css';\n\nconst SignUp = () => {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    // Perform sign-up logic here\n    // You can make an API call to your server or handle the sign-up process locally\n    // Reset the form fields after sign-up\n    setName('');\n    setEmail('');\n    setPassword('');\n    // Optionally, you can navigate to the login page here\n    // You can replace \"/login\" with the actual login route in your application\n    // Make sure it matches the \"path\" attribute defined in AppRouter.js\n    window.location.href = '/login';\n  };\n\n  return (\n    <div className=\"join-container\">\n      <div className=\"join-box\">\n        <h2 className='join-heading'>Sign Up</h2>\n        <form onSubmit={handleSubmit}>\n          <input\n            type=\"text\"\n            placeholder=\"Name\"\n            value={name}\n            onChange={(event) => setName(event.target.value)}\n          />\n          <input\n            type=\"email\"\n            placeholder=\"Email\"\n            value={email}\n            onChange={(event) => setEmail(event.target.value)}\n          />\n          <input\n            type=\"password\"\n            placeholder=\"Password\"\n            value={password}\n            onChange={(event) => setPassword(event.target.value)}\n          />\n          <button type=\"submit\">Sign Up</button>\n        </form>\n        <p>\n          Already have an account? <Link to=\"/login\">Log in</Link>\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default SignUp;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}